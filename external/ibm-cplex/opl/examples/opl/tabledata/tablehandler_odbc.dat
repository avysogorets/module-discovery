// --------------------------------------------------------------------------
// Licensed Materials - Property of IBM
//
// 5725-A06 5725-A29 5724-Y48 5724-Y49 5724-Y54 5724-Y55
// Copyright IBM Corporation 1998, 2024. All Rights Reserved.
//
// Note to U.S. Government Users Restricted Rights:
// Use, duplication or disclosure restricted by GSA ADP Schedule
// Contract with IBM Corp.
// --------------------------------------------------------------------------

n = 10000;

// Please modify connection strings according to your connection parameters.
// Using standard security, connection strings look like:
// Driver={SQL Server};Server=myServerAddress;Database=myDataBase;Uid=myUsername;Pwd=myPassword;

ODBCConnection in("Driver={SQL Server};Server=localhost\\SQLEXPRESS;Database=table_handler;TrustedConnection=True;NoCreat=true;", "");
ODBCConnection out("Driver={SQL Server};Server=localhost\\SQLEXPRESS;Database=table_handler;TrustedConnection=True",
                   "DROP TABLE IF EXISTS odbcResults;CREATE TABLE odbcResults (coli INTEGER, colf REAL, cols TEXT)");

v_int from ODBCRead(in, "SELECT col0 from data");
v_float from ODBCRead(in, "SELECT col1 from data_f");
v_string from ODBCRead(in, "SELECT col2 from data_s");

a_int from ODBCRead(in, "SELECT col1 from data");
a_float from ODBCRead(in, "SELECT col1 from data_f");
a_string from ODBCRead(in, "SELECT col2 from data_s");

s_int from ODBCRead(in, "SELECT col1 from data");
s_float from ODBCRead(in, "SELECT col1 from data_f");
s_string from ODBCRead(in, "SELECT col2 from data_s");

v_tuple from ODBCRead(in, "SELECT coli, colf, cols from data_m");
a_tuple from ODBCRead(in, "SELECT coli, colf, cols from data_m");
s_tuple from ODBCRead(in, "SELECT coli, colf, cols from data_m");

v_nested from ODBCRead(in, "SELECT cols, colf, coli from data_m");
a_nested from ODBCRead(in, "SELECT cols, colf, coli from data_m");
s_nested from ODBCRead(in, "SELECT cols, colf, coli from data_m");



v_int to ODBCPublish(out, "INSERT into odbcResults VALUES(?, null, null)");
v_float to ODBCPublish(out, "INSERT into odbcResults VALUES(null, ?, null)");
v_string to ODBCPublish(out, "INSERT into odbcResults VALUES(null, null, ?)");

a_int to ODBCPublish(out, "INSERT into odbcResults VALUES(?, null, null)");
a_float to ODBCPublish(out, "INSERT into odbcResults VALUES(null, ?, null)");
a_string to ODBCPublish(out, "INSERT into odbcResults VALUES(null, null, ?)");

s_int to ODBCPublish(out, "INSERT into odbcResults VALUES(?, null, null)");
s_float to ODBCPublish(out, "INSERT into odbcResults VALUES(null, ?, null)");
s_string to ODBCPublish(out, "INSERT into odbcResults VALUES(null, null, ?)");

v_tuple to ODBCPublish(out, "INSERT into odbcResults VALUES(?, ?, ?)");
a_tuple to ODBCPublish(out, "INSERT into odbcResults VALUES(?, ?, ?)");
s_tuple to ODBCPublish(out, "INSERT into odbcResults VALUES(?, ?, ?)");

/* Diabled because ODBC does not support named parameters
v_nested to ODBCPublish(out, "INSERT into odbcResults VALUES(?3, ?2, ?1)");
a_nested to ODBCPublish(out, "INSERT into odbcResults VALUES(?3, ?2, ?1)");
s_nested to ODBCPublish(out, "INSERT into odbcResults VALUES(?3, ?2, ?1)");
*/